% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bootstrap_Logic.R
\name{check_bootstrap_inputs}
\alias{check_bootstrap_inputs}
\title{Check whether enough information has been provided to fit the requested flavour of bootstrap}
\usage{
check_bootstrap_inputs(
  data = NULL,
  mod_Y = NULL,
  mod_M = NULL,
  boot_type = c("par", "npar", "spar")
)
}
\arguments{
\item{data}{Original dataset. Optional for parametric (as long as \code{mod_Y} and \code{mod_M} are supplied), required for non-parametric, .}

\item{mod_Y}{Regression model for predicting \code{Y}. Recommended but optional for parametric (as long as \code{data} is supplied), not used for non-parametric.}

\item{mod_M}{Regression model for predicting \code{M}. Recommended but optional for parametric (as long as \code{data} is supplied), not used for non-parametric.}

\item{boot_type}{Indicates which type of bootstrap should be performed. Options include parametric (\code{par}), non-parametric (\code{npar}), and semi-parametric (\code{spar}).}
}
\value{
\code{TRUE} if there is sufficient information available to fit the requested bootstrap. \code{FALSE} otherwise. See arguments for requirements
}
\description{
Check whether enough information has been provided to fit the requested flavour of bootstrap
}
\examples{
n = 20
K = 3
all_reg_pars = make_all_reg_pars()
data = make_validation_data(n, K, all_reg_pars)

mod_Y = fit_mod_Y(data)
mod_M = fit_mod_M(data)

# These settings are fine
check_bootstrap_inputs(mod_Y = mod_Y, mod_M = mod_M, boot_type = "par")
check_bootstrap_inputs(mod_Y = mod_Y, mod_M = mod_M, boot_type = "spar")
check_bootstrap_inputs(data = data, boot_type = "npar")

# This setting is not supported
tryCatch({
    check_bootstrap_inputs(mod_Y = mod_Y, mod_M = mod_M, boot_type = "npar")
    print("No error found. This represents a failure of check_bootstrap_inputs()")
  },
  error = function(e) e
)


# These settings are okay, but inefficient
\dontrun{
 check_bootstrap_inputs(data = data, boot_type = "par")
 check_bootstrap_inputs(data = data, boot_type = "spar")
}
}
